{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gPA+BeA,MA1Bf,YAAoD,IAApCC,EAAmC,EAAnCA,KAAKC,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,OACtC,OAAO,sBAAKC,UAAY,QAAjB,UACH,qBAAKC,IAAOH,EAAQI,IAAON,EAAOA,MAASA,IAC3C,sBAAKI,UAAY,aAAjB,UACI,oBAAIA,UAAY,cAAhB,SAA+BJ,IAC/B,oBAAII,UAAY,aAAhB,SAA8BL,IAC9B,oBAAIK,UAAY,eAAhB,SACKD,EAAOI,KAAI,SAACJ,EAAOK,GAAR,OACR,qBAAkBJ,UAAY,iBAA9B,cAAiDD,IAAtCK,QAGnB,mBAAGJ,UAAY,gBAAf,SAAgCH,WC6B7BQ,G,kNAtCbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEAC2BC,IAAMC,IAAI,yDADrC,gBACSJ,EADT,EACHK,KAAMA,KAAML,OACnB,EAAKM,SAAS,CAACN,SAAOD,WAAU,IAFtB,2C,uDAIZ,WACEQ,KAAKN,c,oBAEP,WAAS,IAAD,EACqBM,KAAKT,MAAzBC,EADD,EACCA,UAAUC,EADX,EACWA,OACjB,OACE,yBAASQ,MAAQ,YAAjB,SACGT,EACC,qBAAKS,MAAQ,SAAb,SACE,sBAAMA,MAAQ,cAAd,0BAEA,sBAAKA,MAAQ,SAAb,cAAwBR,EAAOL,KAAI,SAAAc,GAAK,OAC1C,cAAC,EAAD,CAEEC,GAAMD,EAAMC,GACZvB,KAAQsB,EAAMtB,KACdC,MAASqB,EAAMrB,MACfC,QAAWoB,EAAMpB,QACjBC,OAAUmB,EAAME,mBAChBpB,OAAUkB,EAAMlB,QANTkB,EAAMC,OAFb,a,GApBME,IAAMC,YCAxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.e9cbd1ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// map = 배열 과 같다 .. Queue.. ? map 은 실행될때 또 다른 argument를 준다. 따라서 id를 생성해야함.\r\n\r\nfunction Movie({year,title,summary,poster,genres}) {\r\n    return <div className = 'movie'>\r\n        <img src = {poster} alt = {title} title = {title}/>\r\n        <div className = 'movie_data'>\r\n            <h3 className = 'movie_title'>{title}</h3>\r\n            <h5 className = 'movie_year'>{year}</h5>\r\n            <h6 className = 'movie_genres'>\r\n                {genres.map((genres,index)=> (\r\n                    <li key = {index} className = 'genres__genres'> {genres}\r\n                    </li>))}\r\n                    </h6>\r\n            <p className = 'movie_summary'>{summary}</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nMovie.propTypes = {\r\n    id:PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster : PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./movie.css\"\n\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  };\n  getMovies = async () => {\n    const {data:{data:{movies}}} = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n    this.setState({movies,isLoading:false})\n  };\n  componentDidMount(){ // render를 호출하면 life cycle method !\n    this.getMovies();\n  }\n  render(){\n    const {isLoading,movies} = this.state;\n    return (\n      <section class = 'container'>\n        {isLoading ? (\n          <div class = 'loader'>\n            <span class = 'loader_text'>Loading...</span>\n          </div> ) : (\n            <div class = 'movies'> {movies.map(movie => (\n          <Movie \n            key = {movie.id}\n            id = {movie.id}\n            year = {movie.year} \n            title = {movie.title} \n            summary = {movie.summary} \n            poster = {movie.medium_cover_image}\n            genres = {movie.genres}\n            />\n        ))};\n        </div>\n      )}\n      </section>\n      \n    )}\n};\n\n\nexport default App;\n\n\n\n\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}